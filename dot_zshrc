# If you come from bash you might have to change your $PATH.
export PATH=$HOME/.local/bin:$HOME/bin:$HOME/bin:$PATH:/snap/bin
# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="agnoster"
if [[ "$(uname)" =~ 'NT' ]]; then
    ZSH_THEME="cypher"
fi
# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"
# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
export ZSH_TMUX_AUTOCONNECT=true
export ZSH_TMUX_AUTOSTART_ONCE=true
export ZSH_TMUX_AUTOCONNECT_EXISTING=true
plugins=(history-substring-search)
if [[ "$(uname)" =~ 'Linux' ]]; then
    plugins+=(systemd tmux docker kubectl git autopep8 npm pip helm)
fi
if [[ "$(uname)" =~ 'MSYS_NT' ]]; then
    plugins=+(kubectl helm)
fi
source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
MYZSH=~/.zsh.d
alias cb='app.getclipboard.Clipboard'
alias cm='chezmoi'
setopt nullglob
for config_file ($MYZSH/*.zsh); do
  # echo "sourcing $config_file"
  source $config_file
done
if [[ -r $MYZSH/.zshrc.$(hostname) ]]; then
    # echo "sourcing $MYZSH/.zshrc.$(hostname)"
    source $MYZSH/.zshrc.$(hostname)
fi

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
# from: https://stackoverflow.com/a/33328293
AGKOZAK_CUSTOM_SYMBOLS=( '⇣⇡' '⇣' '⇡' '+' 'x' '!' '>' '?' 'S')
AGKOZAK_CUSTOM_RPROMPT='[%D{%L:%M:%S %p}]'
AGKOZAK_CUSTOM_RPROMPT+='|$(kube_ps1)'
reset-prompt-and-accept-line() {
    zle reset-prompt
        zle accept-line
    }

zle -N reset-prompt-and-accept-line

bindkey '^m' reset-prompt-and-accept-line

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

function start_tmux() {
    if type tmux &> /dev/null; then
        #if not inside a tmux session, and if no session is started, start a new session
        # if [[ -z "$TMUX" && -z $TERMINAL_CONTEXT ]]; then
        #     (tmux -2u attach -dt default || tmux -2u new-session -s default)
        # fi
        #
        # Only attach on new terminal if not already attached
        if [[ ! $(tmux list-sessions |grep -q attached) ]]; then
            (tmux -2u attach -dt default || tmux -2u new-session -s default)
        fi
    fi
}
start_tmux

export EDITOR=nvim
