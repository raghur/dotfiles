# See the following files:
#
#   /opt/local/share/doc/tmux/t-williams.conf
#   /opt/local/share/doc/tmux/screen-keys.conf
#   /opt/local/share/doc/tmux/vim-keys.conf
#
# URLs to read:
#
#   http://blog.yjl.im/2009/11/migrating-to-tmux-from-gnuscreen.html
#   http://blog.hawkhost.com/2010/06/28/tmux-the-terminal-multiplexer/
#   http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2/
#   http://www.dayid.org/os/notes/tm.html
#
# Other sample tmux.conf files
#
#   http://www.mindfuzz.net/?p=178
#
# -----------------------------------------------------------------------------
# Global settings
unbind-key C-b
set-option -g default-shell $SHELL
set-option -sg escape-time 10
set-option -g prefix `
bind-key ` send-prefix
# send the prefix to client inside window
bind-key C-a send-prefix


# open a man page in new window
# bind-key / command-prompt "split-window 'exec man %%'"

# quick view of processes
#bind-key "~" split-window "exec htop"

# scrollback buffer n lines
set -g history-limit 5000
set -g renumber-windows on
# listen for activity on all windows
set -g bell-action any
#set -g bell-action none

# start window indexing at zero (default)
set -g base-index 1
set -g pane-base-index 1

#instructs tmux to expect UTF-8 sequences
# setw -g utf8 on
# set -g utf8 on
# set-option -g status-utf8 on
# xterm-style function key sequences
setw -g xterm-keys on
set-option -g default-terminal "screen-256color"

# enable wm window titles
set -g set-titles on

# control automatic window renaming
set -g allow-rename on
set -g automatic-rename on
set -g automatic-rename-format '#{b:pane_current_path}'
set -g status-interval 5
set -g monitor-activity on
# don't close windows. just deactivate them. use respawn-window to reactivate.
#setw -g remain-on-exit on


# Key bindings

# reload & refresh settings
bind-key R refresh-client
bind-key r source-file ~/.tmux.conf \; display "reloaded config"

# detach client
bind-key d detach
bind-key C-d detach

# choose a client to detach
bind-key D choose-client

# choose window/session
bind-key "'" choose-window
bind-key '"' choose-session

# display visible indicator of each pane
bind-key w display-panes

# needs prefix.
bind-key j select-pane -t :.-
bind-key k select-pane -t :.+
bind-key t kill-pane
bind-key l select-window -n
bind-key h select-window -p

bind-key Tab run-shell ~/.tmux/select-nvim.sh

# swap panes
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U


bind -n S-Up copy-mode -e \; send-keys -X scroll-up
bind -n S-Down copy-mode -e \; send-keys -X scroll-down
bind -n S-Pageup copy-mode -e \; send-keys -X halfpage-up
bind -n S-Pagedown copy-mode -e \; send-keys -X halfpage-down

# last pane
bind-key Space select-pane -l

# kill current pane/window
# bind-key q confirm-before kill-pane
# bind-key Q confirm-before kill-window
# bind-key C-q confirm-before kill-pane
bind-key x kill-pane
bind-key X kill-window


# vi-style controls for copy mode
setw -g mode-keys vi
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi V send -X rectangle-toggle
bind ] paste-buffer

# enable mouse selection in copy mode
set -g mouse on
if-shell -F "$SSH_CLIENT" {
    set -g mouse off
}
bind-key m set-option -g mouse
set-hook client-attached {
    # display "attached"
    if-shell -F "$SSH_CLIENT" {
        set -g mouse off
    }
}

# list all paste buffers (default key is '#')
bind-key b list-buffers

# choose buffer to paste interactively (default key was '=')
bind-key p choose-buffer

# prev
bind-key BSpace last-window

# title (default key in tmux is ',')
bind-key A command-prompt "rename-window %%"

# quit
# bind-key \ confirm-before kill-server

# displays
bind-key * list-clients

# Split windows like vim

# vim's definition of a horizontal/vertical split is reversed from tmux's
#bind-key s split-window -v
#bind-key v split-window -h

# alternatively, use better mnemonics for horizontal/vertical splits
bind-key c new-window      -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# resize panes like vim
bind-key -r < resize-pane -L 3
bind-key -r , resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r . resize-pane -R 3
bind-key -r + resize-pane -U 1
bind-key -r = resize-pane -D 1


# Statusbar settings

# toggle statusbar
bind-key s set status

# use vi-style key bindings in the status line
set -g status-keys vi

# amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 500

# =====================================
# ===           Theme               ===
# =====================================

# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

# from 
# https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf
# =====================================
# ===    Appearence and status bar  ===
# ======================================

set -g mode-style "fg=default,bg=$color_main"

# command line style
set -g message-style "fg=$color_main,bg=$color_dark"

# status line style
set -g status-style "fg=$color_status_text,bg=$color_dark"

# window segments in status line
set -g window-status-separator ""
separator_powerline_left=""
separator_powerline_right=""

setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-format " #I:#W "
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]$separator_powerline_right ❁ #I:#W #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

# outline for active pane
setw -g pane-active-border-style "fg=$color_main"

# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position top
set -g status-justify left
set -g status-right-length 100
# define widgets we're going to use in status bar
# note, that this is not the complete list, some of them are loaded from plugins
wg_session="#[fg=$color_session_text] #S #[default]"
wg_battery="#{battery_status_fg} #{battery_icon} #{battery_percentage}"
wg_date="#[fg=$color_secondary]%h %d %H:%M#[default]"
wg_mouse="#[fg=$color_secondary]Mouse: #{?mouse,#[fg=$color_main]on,#[default]off}"
wg_user_host="#[fg=$color_secondary]#(whoami)#[default]@#H"
wg_is_zoomed="#[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"
# TODO: highlighted for nested local session as well
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set -g status-left "$wg_session"
set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_mouse | $wg_user_host | $wg_date $wg_battery #{online_status}"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_LAUNCH_KEY="f"
TMUX_FZF_ORDER="pane|window|session|command|keybinding|clipboard|process"
TMUX_FZF_PANE_FORMAT="[#{window_name}] #{pane_current_command} #{pane_current_path}"
TMUX_FZF_MENU=\
"switch pane\n~/.tmux/plugins/tmux-fzf/scripts/pane.sh switch\n"\
"kill process\n~/.tmux/plugins/tmux-fzf/scripts/process.sh kill\n"
bind-key "i" run-shell -b "~/.tmux/plugins/tmux-fzf/scripts/pane.sh switch"
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_selection_mouse 'clipboard'
set -g @yank_selection 'clipboard'


set -g @continuum-restore 'on'
# Session initialization

# Note:
#   new  - alias for new-session
#   neww - alias for new-window

# first session
#new -d -s0
#neww -d
#neww -d
#neww -d

# second session
#new -d -s1
#neww -d
#neww -d

#select-window -t1

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

run '~/.tmux/plugins/tpm/tpm'
# -----------------------------------------------------------------------------
# space in prompt.
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "❯ "

# vim: fen fdl=0 fdm=marker
